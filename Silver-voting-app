// 1. frontend/VotingApp.jsx
import { useState } from 'react';
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { ethers } from 'ethers';

export default function VotingApp() {
  const [question, setQuestion] = useState("");
  const [voteOptions, setVoteOptions] = useState(["", ""]);
  const [submitting, setSubmitting] = useState(false);

  const handleOptionChange = (index, value) => {
    const newOptions = [...voteOptions];
    newOptions[index] = value;
    setVoteOptions(newOptions);
  };

  const addOption = () => setVoteOptions([...voteOptions, ""]);

  const submitPoll = async () => {
    setSubmitting(true);
    // Logic to interact with smart contract
    setSubmitting(false);
  };

  return (
    <Card className="max-w-xl mx-auto mt-10 p-4">
      <CardContent>
        <Input
          placeholder="اكتب سؤال الاستطلاع"
          value={question}
          onChange={(e) => setQuestion(e.target.value)}
        />
        {voteOptions.map((option, index) => (
          <Input
            key={index}
            placeholder={`خيار ${index + 1}`}
            value={option}
            onChange={(e) => handleOptionChange(index, e.target.value)}
            className="mt-2"
          />
        ))}
        <Button onClick={addOption} className="mt-2">أضف خيار</Button>
        <Button onClick={submitPoll} className="mt-4" disabled={submitting}>
          {submitting ? "...جارٍ الإرسال" : "أنشئ الاستطلاع"}
        </Button>
      </CardContent>
    </Card>
  );
}

// 2. frontend/styles.css
/* هنا يمكنك إضافة التنسيقات حسب الحاجة أو استخدام Tailwind مباشرة */

// 3. frontend/utils/ethereum.js
import { ethers } from 'ethers';

export async function connectWallet() {
  if (window.ethereum) {
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    await provider.send("eth_requestAccounts", []);
    return provider.getSigner();
  } else {
    alert("MetaMask غير مثبت");
  }
}

// 4. smart_contracts/VotingContract.sol
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract VotingContract {
    struct Poll {
        string question;
        string[] options;
        mapping(uint => uint) votes;
        address creator;
        bool active;
    }

    Poll[] public polls;

    function createPoll(string memory _question, string[] memory _options) public {
        Poll storage newPoll = polls.push();
        newPoll.question = _question;
        newPoll.options = _options;
        newPoll.creator = msg.sender;
        newPoll.active = true;
    }

    function vote(uint _pollId, uint _optionIndex) public {
        require(polls[_pollId].active, "استطلاع غير مفعل");
        polls[_pollId].votes[_optionIndex]++;
    }

    function getPoll(uint _pollId) public view returns (string memory, string[] memory, address, bool) {
        Poll storage poll = polls[_pollId];
        return (poll.question, poll.options, poll.creator, poll.active);
    }
}

// 5. backend/api.js
const express = require('express');
const app = express();
const cors = require('cors');

app.use(cors());
app.use(express.json());

app.post('/submitPoll', (req, res) => {
  const { question, options } = req.body;
  // Placeholder: Save poll to database or trigger blockchain interaction
  res.status(200).send({ success: true });
});

app.listen(3001, () => console.log("API listening on port 3001"));

// 6. docs/project_overview.md
# Silver: Transparent Voting DApp

Silver is a decentralized polling platform built for underserved regions, offering blockchain-based transparency for public opinion collection. Users can create and vote on polls using ETH, ensuring engagement through incentives and sustainability through gas fees.

**Core Stack**:
- Frontend: React + shadcn/ui
- Backend: Node.js / Bubble
- Blockchain: Ethereum Smart Contracts

// 7. docs/ethereum_grant_proposal.md
# Ethereum Foundation Grant Proposal

## Project Title: Silver

### Purpose:
A decentralized polling application promoting civic engagement and transparency in underrepresented regions using Ethereum smart contracts.

### Features:
- Poll creation with small ETH fee
- MetaMask integration
- On-chain storage
- Public poll listing for easy access

### Request:
Funding to scale deployment, support multi-language UI, and integrate privacy-preserving mechanisms.

### Impact:
Supports decentralized civic expression, especially in the Middle East & Africa.
